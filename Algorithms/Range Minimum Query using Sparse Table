import java.util.Arrays;

public class RMQ_SparseTable {
    private int[][] st;
    private int[] log;

    public RMQ_SparseTable(int[] arr) {
        int n = arr.length;
        int logN = (int) (Math.log(n) / Math.log(2)) + 1;
        st = new int[n][logN];
        log = new int[n + 1];

        for (int i = 2; i <= n; i++) {
            log[i] = log[i / 2] + 1;
        }

        for (int i = 0; i < n; i++) {
            st[i][0] = arr[i];
        }

        for (int j = 1; (1 << j) <= n; j++) {
            for (int i = 0; i + (1 << j) - 1 < n; i++) {
                st[i][j] = Math.min(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);
            }
        }
    }

    public int rangeMinQuery(int left, int right) {
        int j = log[right - left + 1];
        return Math.min(st[left][j], st[right - (1 << j) + 1][j]);
    }

    public static void main(String[] args) {
        int[] arr = {1, 3, 2, 7, 9, 11, 2, 8, 4, 6};
        RMQ_SparseTable rmq = new RMQ_SparseTable(arr);
        
        System.out.println("Minimum in range (1, 5): " + rmq.rangeMinQuery(1, 5));
        System.out.println("Minimum in range (0, 9): " + rmq.rangeMinQuery(0, 9));
    }
}
